pipeline {
  agent {
    docker {
      image 'vamsikrishna212/maven-vamsikadiyam-docker-agent:v2'
      args '--entrypoint="" --user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    SONAR_URL = "http://54.234.74.88:9000"
    GIT_REPO_NAME = "jenkins-End-to-End-CICD"
    GIT_USER_NAME = "vamsikadiyam444"
    DOCKER_REPO = "vamsikrishna212/ultimate-cicd"
  }

  options {
    skipDefaultCheckout()  // Explicit checkout only
  }

  stages {
    stage('Checkout') {
      steps {
        // Checkout into root of workspace to ensure .git is available for git commands
        dir('.') {
          checkout([$class: 'GitSCM', 
            branches: [[name: '*/main']], 
            userRemoteConfigs: [[
              url: "https://github.com/${env.GIT_USER_NAME}/${env.GIT_REPO_NAME}.git"
            ]]
          ])
        }
      }
    }

    stage('Build and Test') {
      steps {
        sh '''
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          mvn clean package
        '''
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=$SONAR_URL
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "${DOCKER_REPO}:${BUILD_NUMBER}"
      }
      steps {
        script {
          sh """
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t ${DOCKER_IMAGE} .
          """
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            # Ensure Git runs in root workspace where .git exists
            git config user.email "vamsikadiyam444@gmail.com"
            git config user.name "vamsikadiyam444"

            # Update manifest with correct image tag
            sed -i "s/replaceImageTag/${BUILD_NUMBE_

          
 


  

        
    
            

   
        

            

  
